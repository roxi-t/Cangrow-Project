version: '3.8'

services:
  nginx:
    image: nginx:latest
    ports:
      - "80:80"  # Map port 80 on the host to port 80 on the container
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf  # Mount the nginx.conf file into the container
    networks:
      - cangrownet  # Connect the service to the custom network cangrownet

  wordpress1:
    image: wordpress:latest
    volumes:
      - wordpress_data:/var/www/html  # Mount the wordpress_data volume to /var/www/html in the container
    environment:
      WORDPRESS_DB_HOST: mariadb-master  # Set the database host for WordPress
      WORDPRESS_DB_USER: user  # Set the database user for WordPress
      WORDPRESS_DB_PASSWORD: password  # Set the database password for WordPress
      WORDPRESS_DB_NAME: mydb  # Set the database name for WordPress
    networks:
      - cangrownet  # Connect the service to the custom network cangrownet

  wordpress2:
    image: wordpress:latest
    volumes:
      - wordpress_data:/var/www/html  # Mount the wordpress_data volume to /var/www/html in the container
    environment:
      WORDPRESS_DB_HOST: mariadb-master  # Set the database host for WordPress
      WORDPRESS_DB_USER: user  # Set the database user for WordPress
      WORDPRESS_DB_PASSWORD: password  # Set the database password for WordPress
      WORDPRESS_DB_NAME: mydb  # Set the database name for WordPress
    networks:
      - cangrownet  # Connect the service to the custom network cangrownet

  mariadb-master:
    image: mariadb:latest
    environment:
      MYSQL_ROOT_PASSWORD: masterpassword  # Set the root password for MariaDB
      MYSQL_DATABASE: mydb  # Set the database name for MariaDB
      MYSQL_USER: user  # Set the database user for MariaDB
      MYSQL_PASSWORD: password  # Set the database password for MariaDB
    volumes:
      - master-data:/var/lib/mysql  # Mount the master-data volume to /var/lib/mysql in the container
    networks:
      - cangrownet  # Connect the service to the custom network cangrownet

  mariadb-replica:
    image: mariadb:latest
    environment:
      MYSQL_ROOT_PASSWORD: replicapassword  # Set the root password for the MariaDB replica
      MYSQL_DATABASE: mydb  # Set the database name for the MariaDB replica
      MYSQL_USER: user  # Set the database user for the MariaDB replica
      MYSQL_PASSWORD: password  # Set the database password for the MariaDB replica
      MYSQL_REPLICA_HOST: mariadb-master  # Set the master host for replication
      MYSQL_REPLICA_USER: replica  # Set the replication user for the replica
      MYSQL_REPLICA_PASSWORD: replicapassword  # Set the replication password for the replica
    command: --replicate-do-db=mydb --server-id=2  # Set replication options
    volumes:
      - replica-data:/var/lib/mysql  # Mount the replica-data volume to /var/lib/mysql in the container
    networks:
      - cangrownet  # Connect the service to the custom network cangrownet

volumes:
  wordpress_data:  # Define the volume for WordPress data
  master-data:  # Define the volume for MariaDB master data
  replica-data:  # Define the volume for MariaDB replica data

networks:
  cangrownet:  # Define the custom network cangrownet
    driver: bridge  # Use the bridge network driver
    ipam:
      driver: default
      config:
        - subnet: 172.28.0.0/28  # Define the subnet for the custom network